name: clojure-cli


on:
  workflow_dispatch:
    inputs:
      linux_install_script_url:
        description: 'LINUX_INSTALL_SCRIPT_URL'
        required: true
        default: 'https://download.clojure.org/install/linux-install-1.10.2.774.sh'
      tags:
        description: 'Tags (whitespace separated)'
      graalvm_ce_tags:
        description: 'GraalVM CE variant tags (whitespace separated)'
        default: "21.0.0 21.0.0-clojure-1.10.2"


jobs:
  build-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ajchemist/clojure-cli
    strategy:
      matrix:
        cfg:
          - { context: clojure-cli/graalvm-ce, variant: graalvm-ce, tags: "${{ github.event.inputs.graalvm_ce_tags }}" }
    name: Context ${{ matrix.cfg.context }}
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitLab Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}


      - uses: actions/checkout@v2


      - name: Github inputs
        run: |
          echo "${{ github.event.inputs.linux_install_script_url }}"
          echo "Tags: ${{ github.event.inputs.tags }}"
          echo "Tags: ${{ matrix.cfg.tags }}"
          echo "SHA: ${{ github.sha }}"


      - name: Docker build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./src/${{ matrix.cfg.context }}/Dockerfile
          load: true
          build-args: |
            linux_install_script_url=${{ github.event.inputs.linux_install_script_url }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ github.run_id }}
            ${{ env.IMAGE_NAME }}:${{ matrix.cfg.variant }}


      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


      - name: Docker image tagging
        env:
          SOURCE_IMAGE: ${{ env.IMAGE_NAME }}:${{ github.sha }}-${{ github.run_id }}
          TAGS: ${{ matrix.cfg.tags }}
        run: |
          . ./src/fns/docker.sh
          docker_tags
          docker push $IMAGE_NAME
